///////////////////////////////// Inspector /////////////////////////////////
#inspector {
  background-color: var(--background-color-alt);
  border-left: 1px solid var(--border-color);
  overflow: hidden auto; // show a Y scrollbar if inspector is too small in height to fit min-height of its content

  display: flex;
  flex-direction: column;
  // padding: 0.25rem 0.5rem;

  > * {
    padding: 0rem 0.5rem;

    // Tags section should shrink to fit its parent if the inspector is small in height
    &:last-child {
      display: flex;
      flex-direction: column;
      flex: 1;
      overflow: hidden;
      // so that the tags section remains visible when inspector is very small in height: inspector should overflow with a scrollbar
      min-height: 6rem;
    }
  }

  header {
    text-align: center;
    padding: 0.5rem 1rem;

    // Similar behavior to toolbar in the outliner
    [role='toolbar'] {
      right: 1rem;
      height: 2rem;
    }

    .toolbar-button {
      min-height: 1.5rem;
      min-width: 1.5rem;

      &[aria-pressed='true'],
      &[aria-checked='true'] {
        color: var(--accent-color);
      }
    }
  }

  // Hovering over inspector should show toolbars
  &:hover header [role='toolbar'] {
    opacity: 1;
  }

  .inspector-section-toggle__body {
    padding-top: 0.2rem;
    padding-bottom: 0.9rem;
    padding-left: 0;
    padding-right: 0;
  }

  .inspector-section-toggle {
    display: flex;
    justify-content: space-between;
    width: 100%;
    padding: 0rem 0rem;
    margin-top: 0;
    margin-bottom: 0.2rem;
    cursor: pointer;
    color: var(--text-color-muted);

    header {
      display: flex;
      padding: 0;
      align-items: center;

      span {
        padding-right: 0.3rem;
        display: flex;
        align-items: center;
      }
    }

    &:hover {
      color: var(--text-color);
      background: transparent;
      color: var(--text-color);
      .custom-icon * {
        opacity: 1;
        fill: var(--text-color);
      }
    }
    &:focus {
      color: var(--text-color);
      background: transparent;
    }
    &:active {
      color: var(--text-color);
      background: transparent;
    }

    .chevron {
      .custom-icon {
        width: 0.8rem;
        height: 0.8rem;
      }
      .custom-icon * {
        opacity: 0.9;
      }
    }

    .custom-icon * {
      fill: var(--text-color-muted);
    }
  }

  .faces_settings_container {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
}

// File info
table#file-info {
  display: block;
  border-spacing: 0 0.25rem;

  tbody {
    width: 100%;
    display: table;
  }

  th {
    color: var(--text-color-muted);
    white-space: nowrap;
    font-weight: unset;
    text-align: unset;
    vertical-align: baseline;
  }

  th,
  td {
    padding: 0;
    user-select: text;
  }

  td {
    padding-left: 1rem;
    word-break: break-word;

    line-height: normal;
    display: block;

    // for fields with loads of text (like descriptions), limit the height
    max-height: 200px;
    overflow-y: auto;
    // resize: vertical; // would be nice to enable only when overflowing
  }

  a {
    // Remove underline for links
    text-decoration: none;

    // Limit to 3 lines
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
  }

  input {
    width: 100%;
  }
}

// Antoine: this is tmp to test the face detector model
.small-thumbnail {
  width: 2rem;
  height: 2rem;
  margin-right: 0.5rem;
  border-radius: 0.25rem;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

.inspector-section {
  .description-box {
    width: 100%;
    border: 1px solid var(--border-color);
    border-radius: 0.25rem;
    background-color: var(--input-color);
    color: var(--text-color);
    padding: 0.4rem;
  }

  .parameters-box {
    width: 100%;
    border: 1px solid var(--border-color);
    border-radius: 0.25rem;
    background-color: var(--input-color);
    color: var(--text-color);
    padding: 0.4rem;
    user-select: text;
    margin-top: 0;
  }

  .prompt-box {
    width: 100%;
    border: 1px solid var(--border-color);
    border-radius: 0.25rem;
    background-color: #1e1e1e;
    color: var(--text-color);
    padding: 0.4rem;
    user-select: text;
    margin-top: 0;
  }

  .tools {
    display: flex;
    flex-direction: column;
    justify-content: left;
    align-items: start;
    padding-left: 0.5rem;
    border-left: 1px solid var(--border-color);

    button {
      border-radius: 0.25rem;
      padding-left: 0.4rem;
      padding-right: 0.4rem;
    }
  }

  .map {
    height: 200px;
    // position: absolute;
    top: 0;
    bottom: 0;
    width: 100%;

    .mapboxgl-canvas {
      border-radius: 0.25rem;
      border: 1px solid var(--border-color);
    }

    .marker {
      background-image: url('/resources/logo/favicon.webp');
      background-size: cover;
      width: 35px;
      height: 35px;
      cursor: pointer;
    }
  }

  .inspector-section__action-buttons {
    display: flex;
    justify-content: space-between;
    padding-top: 0.1rem;

    button {
      padding: 0.3rem 0.5rem;
      border-radius: 0.25rem;
      cursor: pointer;
    }

    .edit-button {
      // border-bottom: 1px solid var(--border-color);
      padding: 0;
      border-radius: 0;
      text-decoration: underline;
      color: var(--text-color-muted);
    }
  }

  .duplicates {
    display: flex;
    justify-content: center;

    .thumbnail {
      width: 3rem;
      height: 3rem;
      margin-right: 0.2rem;
      border-radius: 0.25rem;
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      border: 1px solid var(--border-color);
    }

    .thumbnail-1 {
    }
    .thumbnail-2 {
      opacity: 0.6;
    }
    .thumbnail-3 {
      opacity: 0.3;
    }
  }

  .show-exiftool {
    // border-bottom: 1px solid var(--border-color);
    padding: 0;
    border-radius: 0;
    text-decoration: underline;
    color: var(--text-color-muted);
  }

  .low-opacity {
    opacity: 0.4;
  }

  .highlight-save {
    background-color: var(--accent-color);
    color: var(--accent-color-text);
  }
}

.text-center {
  text-align: center;
}
